# Choose a name for docker-compose project. This should be unique and readable.
#
# New containers and networks will use this as name prefix.
COMPOSE_PROJECT_NAME=shop

# User and group ID for docker processes.
#
# Should be the same as for user who is currently logged in.
# You can check your users' ID and GID by calling:
#
# id -u #(for UID)
# id -g #(for GID)
UID=1000
GID=1000

# The Composer version that is used to manage packages.
#
# You can use complete version number here, like 1.10.22, or only the major
# part of version number (eg. 2) if you want to install the newest
# available version for given major release.
COMPOSER_VERSION=2

# The PHP version that is going to be used in a Docker image build.
# If you change PHP version in already used environment, remember to
# rebuild the container:
#
# docker-compose build
#
# Use only the code number such as 8.1, 7.3, 7.4 or 5.6.
PHP_VERSION=7.1

# Point to magento installation directory. It can be empty if you want to
# initialize new project.
#
# The path can be either absolute or relative. The variable is mandatory
# and the directory has to exist before you run the environment.
MAGENTO_PATH=../magento

# Setup your host configuration. Choose a localhost IP address on which
# all services will be accessible.
#
# Host IP should preferably be one of 127.* addresses, eg. 127.0.0.1.
# This ensures that the container cannot be accessed from any device
# within LAN you're connected to.
#
# Pro tip: defining different local host IPs for each project you're hosting
# on MDE allows you to access all of them on port 80 when they're all up.
# You'll also need an entry for each of them in your `/etc/hosts` file.
#
# For example, for host IPs 127.0.1.1 and 127.0.1.2 in two projects
# that are running simulatenously, you'll need these entries in `/etc/hosts`:
#
# ```
# 127.0.1.1 project1.self
# 127.0.1.2 project2.self
# ```
#
# Note that port 58080 is used internally so it can't be used here.
LOCALHOST_IP=127.0.0.1

# MySQL database details used on initialisation.
#
# If you want to change those on already used project, remember
# to remove `storage/mysql` directory.
#MYSQL_HOST=db
MYSQL_ROOT_PASSWORD=
MYSQL_USER=
MYSQL_PASSWORD=
MYSQL_DATABASE=

# If you want to save MySQL data files in your local directory, uncomment
# the following line.
#
# This option is only reliable on Linux. On Windows it won't work, on MacOS
# it may cause performance issues.
#MYSQL_USER_DIRECTORY=./storage/mysql

# You can pass credentials to Composer using one of the following method:
#
# - using environment variable,
# - using **existing** `auth.json` file.
#
COMPOSER_AUTH={"http-basic":{"repo.magento.com":{"username":"PUBLIC_KEY","password":"PRIVATE_KEY"}}}
#COMPOSER_AUTH_FILE=~/.composer/auth.json

# Uncomment if you want Composer to automatically run on when
# the `app` container is starting.
#COMPOSER_INSTALL_ON_BOOT=true

# Override paths that will be mounted inside the app container if you want
# to put them somwhere else.
#
# Uncomment and modify those only when required - it's highly recommended
# that you'll leave them commented out.
#SSH_DIRECTORY=~/.ssh
#NPM_DIRECTORY=~/.npm
#COMPOSER_CACHE_DIRECTORY=~/.composer/cache

# If you want to use Magento 1.x, uncomment the following line.
#MAGENTO_1_MODE=true

# Depending on your environment you may need to set custom remote_host
# for XDebug.
#
# If you run the environment on Linux or MacOS, XDebug should work out of
# the box (remember to set up path mappings in your IDE).
#
# However, if you're for example using custom virtual machine, you will need
# to pass the actual host address so XDebug could know where to connect.
#
# By default XDebug is disabled. Uncomment XDEBUG_ENABLED variable
# to enable it.
#XDEBUG_ENABLED=true
#XDEBUG_REMOTE_HOST=192.168.12.34

# If you want the web server to be proxied through a different service
# like Varnish, use the following option and point the target URL.
#PROXY_THROUGH=http://varnish

# Provide configuration for MailCatcher.
#
# App container can send e-mails using `sendmail` command through external
# SMTP server of choice.
#
# MailCatcher will work with just two first lines of configuration uncommented.
# Both SENDMAIL_SMTP_AUTH and SENDMAIL_SMTP_TLS variables take only 'on' and 'off' values.
SENDMAIL_SMTP_HOST=mailcatcher
SENDMAIL_SMTP_PORT=1025
#SENDMAIL_SMTP_AUTH=off
#SENDMAIL_SMTP_TLS=off
#SENDMAIL_SMTP_USER=user
#SENDMAIL_SMTP_PASSWORD=secret
#SENDMAIL_SMTP_FROM=magento@internal.app

# Set up your Elasticsearch instance.
#
# For development purposes only a single Elasticsearch node is used.
#ELASTICSEARCH_CLUSTER_NAME=es
#ELASTICSEARCH_NODE_NAME=es_n1
